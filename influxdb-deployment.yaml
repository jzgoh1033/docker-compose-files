apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-normal-load.yml convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb
  name: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: influxdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose-normal-load.yml convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/Grafana_Influx_prometheus_network: "true"
        io.kompose.network/telegraf_influx_network: "true"
        io.kompose.service: influxdb
    spec:
      containers:
        - env:
            - name: GF_INSTALL_PLUGINS
              value: percona-percona-app
            - name: INFLUXDB_DB
              value: k6
          image: influxdb:1.8
          name: influxdb
          ports:
            - containerPort: 8086
          resources:
            limits:
              cpu: "1"
              memory: "4294967296"
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: influxdb-claim0
            - mountPath: /var/lib/mysql
              name: influxdb-claim1
            - mountPath: /etc/my.cnf
              name: influxdb-claim2
      restartPolicy: Always
      volumes:
        - name: influxdb-claim0
          persistentVolumeClaim:
            claimName: influxdb-claim0
        - name: influxdb-claim1
          persistentVolumeClaim:
            claimName: influxdb-claim1
        - name: influxdb-claim2
          persistentVolumeClaim:
            claimName: influxdb-claim2
status: {}
