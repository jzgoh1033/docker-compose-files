apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-normal-load.yml convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: nodejs-app1
  name: nodejs-app1
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nodejs-app1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose-normal-load.yml convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/mysql_db_nodejs_network: "true"
        io.kompose.network/nginx_web_server_nodejs_network: "true"
        io.kompose.network/prometheus_collection_network: "true"
        io.kompose.service: nodejs-app1
    spec:
      containers:
        - args:
            - npm
            - run
            - start:prod
          env:
            - name: TZ
              value: Asia/Singapore
          image: nodejs_app
          name: nodejs-app1
          ports:
            - containerPort: 8888
          resources:
            limits:
              cpu: 400m
              memory: "104857600"
          volumeMounts:
            - mountPath: /app
              name: nodejs-app1-claim0
          workingDir: /app
      restartPolicy: Always
      volumes:
        - name: nodejs-app1-claim0
          persistentVolumeClaim:
            claimName: nodejs-app1-claim0
status: {}
