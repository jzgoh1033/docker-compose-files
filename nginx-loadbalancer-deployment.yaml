apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-normal-load.yml convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-loadbalancer
  name: nginx-loadbalancer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nginx-loadbalancer
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose-normal-load.yml convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/nginx_exporter_net: "true"
        io.kompose.network/nginx_lb_webserver_network: "true"
        io.kompose.network/telegraf_nginx_network: "true"
        io.kompose.service: nginx-loadbalancer
    spec:
      containers:
        - image: nginx_ssl
          name: nginx-loadbalancer
          ports:
            - containerPort: 443
            - containerPort: 7073
          resources: {}
          volumeMounts:
            - mountPath: /etc/nginx/http.d
              name: nginx-loadbalancer-claim0
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-loadbalancer-claim1
            - mountPath: /var/log/nginx
              name: nginx-loadbalancer-claim2
      restartPolicy: Always
      volumes:
        - name: nginx-loadbalancer-claim0
          persistentVolumeClaim:
            claimName: nginx-loadbalancer-claim0
        - name: nginx-loadbalancer-claim1
          persistentVolumeClaim:
            claimName: nginx-loadbalancer-claim1
        - name: nginx-loadbalancer-claim2
          persistentVolumeClaim:
            claimName: nginx-loadbalancer-claim2
status: {}
